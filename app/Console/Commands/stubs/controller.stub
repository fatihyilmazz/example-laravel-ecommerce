<?php

namespace {{ namespace }};

use App\{{ model }};
use App\Http\Controllers\Controller;
use App\Http\Requests\Admin\Filter{{ model }};
use App\Http\Requests\Admin\Store{{ model }};
use App\Services\{{ model }}Service;
use Illuminate\Database\Eloquent\Model;

class {{ model }}Controller extends Controller
{
    /**
     * @param Filter{{ model }} $request
     * @param {{ model }}Service ${{ modelVariable }}Service
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     */
    public function index(Filter{{ model }} $request, {{ model }}Service ${{ modelVariable }}Service)
    {
        $request->validated();

        return view('admin.{{ modelVariable }}.index', [
            '{{ modelVariablePlural }}' => ${{ modelVariable }}Service->get{{ modelPlural }}ByFilter($request),
        ]);
    }

    /**
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     */
    public function create()
    {
        return view('admin.{{ modelVariable }}.form');
    }

    /**
     * @param Store{{ model }} $request
     * @param {{ model }}Service ${{ modelVariable }}Service
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector
     */
    public function store(Store{{ model }} $request, {{ model }}Service ${{ modelVariable }}Service)
    {
        $validatedAttributes = $request->validated();

        ${{ modelVariable }} = ${{ modelVariable }}Service->create($validatedAttributes);

        if (${{ modelVariable }} instanceof Model) {
            Session::flash('notifyStatus', 'success');
            Session::flash('notifyTitle', __('messages.info.operation.successful'));
            Session::flash('notifyMessage', __('messages.info.operation.saved'));

            return redirect(route('admin.{{ modelVariablePlural }}.index'));
        }

        Session::flash('notifyStatus', 'danger');
        Session::flash('notifyTitle',  __('messages.info.operation.failed'));
        Session::flash('notifyMessage', __('messages.info.operation.saving_failed'));

        return back()->withInput();
    }

    /**
     * @param {{ model }} ${{ modelVariable }}
     * @return \Illuminate\Contracts\View\Factory|\Illuminate\View\View
     */
    public function edit({{ model }} ${{ modelVariable }})
    {
        html()->model(${{ modelVariable }});

        return view('admin.{{ modelVariable }}.form', [
            '{{ modelVariable }}' => ${{ modelVariable }},
        ]);
    }

    /**
     * @param Store{{ model }} $request
     * @param int ${{ modelVariable }}Id
     * @param {{ model }}Service ${{ modelVariable }}Service
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector|object
     */
    public function update(Store{{ model }} $request, int ${{ modelVariable }}Id, {{ model }}Service ${{ modelVariable }}Service)
    {
        $validatedAttributes = $request->validated();

        $updateStatus = ${{ modelVariable }}Service->update($validatedAttributes, ${{ modelVariable }}Id);

        if ($updateStatus) {
            Session::flash('notifyStatus', 'success');
            Session::flash('notifyTitle', __('messages.info.operation.successful'));
            Session::flash('notifyMessage', __('messages.info.operation.saved'));

            return redirect(route('admin.{{ modelVariablePlural }}.index'));
        }

        Session::flash('notifyStatus', 'danger');
        Session::flash('notifyTitle',  __('messages.info.operation.failed'));
        Session::flash('notifyMessage', __('messages.info.operation.saving_failed'));

        return back()->withInput()->setStatusCode(Response::HTTP_NOT_FOUND);
    }

    /**
     * @param int ${{ modelVariable }}Id
     * @param {{ model }}Service ${{ modelVariable }}Service
     * @return bool|null
     */
    public function destroy(int ${{ modelVariable }}Id, {{ model }}Service ${{ modelVariable }}Service)
    {
        return ${{ modelVariable }}Service->destroy(${{ modelVariable }}Id);
    }
}
